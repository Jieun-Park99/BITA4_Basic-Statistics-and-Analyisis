#api 확인 해보기 예시 코드 + 전반적인 geocode 출력 보기
library(ggmap)
register_google(key='AIzaSyDglGuNAZE7fzqEr6er5EObrs_vDIUZGb8')
names <- c("용두암","성산일출봉","정방폭포",
"중문관광단지","한라산1100고지","차귀도")
addr <- c("제주시 용두암길 15",
"서귀포시 성산읍 성산리",
"서귀포시 동홍동 299-3",
"서귀포시 중문동 2624-1",
"서귀포시 색달동 산1-2",
"제주시 한경면 고산리 125")
gc <- geocode(enc2utf8(addr), ouput="more")
gc
#tibble  vs. dataframe
library(dplyr)
class(gc)
class(iris)
head(iris)
str(iris)
as.data.frame(gc)
gc
tb<-tibble(
`:)` = "smile",
` ` = "space",
`2000` = "숫자"
); tb
as_tibble(iris)
#학교 이름 넣어서 output 옵션별로 출력해보기
geocode("Ewha Womans University","latlon")
geocode("Ewha Womans University","latlona")
geocode("Ewha Womans University","more")
geocode("Ewha Womans University","all")
#한국어로 주소 출력하기
geocode(location=enc2utf8("이화여자대학교&language=ko"),output="latlona")
geocode(location=enc2utf8("이화여자대학교&language=ko"),output="more")
#[quakes 실습]
library(ggmap)
library(ggplot2)
str(quakes)
df <- head(quakes,100) # quakes information
cen <- c(mean(df$long), mean(df$lat)) # map location
gc <- data.frame(lon=df$long, lat=df$lat) # create data frame
gc$lon <- ifelse(gc$lon>180, -(360-gc$lon), gc$lon)
get_googlemap(center=cen, # on the map
maptype="roadmap",
zoom=4, marker=gc) %>% ggmap()
map = get_googlemap(center=cen, # on the map
maptype="roadmap",
zoom=4, marker=gc)
ggmap(map)+theme(axis.title.x=element_blank(), # x,y axis blank
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
# map에 표현하기
center <- c(mean(s_2$y좌표), mean(s_2$x좌표))
# 2호선 추출
s_2 <- data2 %>% filter(호선=='2')
gc$lon <- ifelse(gc$lon>180, -(360-gc$lon), gc$lon)
get_googlemap(center=cen, # on the map
maptype="roadmap",
zoom=4, marker=gc) %>% ggmap()
map = get_googlemap(center=cen, # on the map
maptype="roadmap",
zoom=4, marker=gc)
ggmap(map)+theme(axis.title.x=element_blank(), # x,y axis blank
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggmap(map)+geom_point(data=df, # 산점도 표현
aes(x=long,y=lat,size=mag), # 원의 크기를 mag로 표시
alpha=0.5) # 투명도 표시
# depth에 따른 색깔 표시
ggmap(map) + geom_point(data=quakes, aes(x=long, y=lat, col=depth), size=1, position=jitter)
# size, depth에 따른 색깔 표시
ggmap(map) + geom_point(data=quakes, aes(x=long, y=lat, size=mag, col=depth), alpha=0.5)
data <- read.csv('C:/Users/palt1/Desktop/R/지하철역위치.csv', header=T)
data2 <- data[,c(2,3,8,9)]
colnames(data2) <- c('전철역명','호선','x좌표','y좌표')
# data:다운
#1.
data <- read.csv("poppulation_2014.csv")
head(data)
#2. 열 이름 변경
region <- data$지역명
lon <- data$lon
lat <- data$lat
pop <- data$population
data <- data.frame(region, lon, lat, pop)
head(data)
# 세종 좌표수정(잘못되었음)
data[8,2] <- 127.296620
data[8,3] <- 36.535268
#3. get_map
center <- c(mean(data$lon), mean(data$lat))
map <- get_map(location =center,maptype="watercolor", zoom=7)
m1 <- ggmap(map)
#4. geom_point
m1 + geom_point(data=data, aes(x=lon,y=lat))
#5. pop비율에 맞게 size변경 / label 넣기
m1 +
geom_point(data=data,
aes(x=lon,y=lat, color=pop, size=pop)) +
geom_text(data=data,
aes(x=lon, y=lat+0.1, label=region),
size=3)
#6. 범례제목 변경
m1 +
geom_point(data=data,
aes(x=lon,y=lat, color=pop, size=pop)) +
geom_text(data=data,
aes(x=lon, y=lat+0.1, label=region),
size=3) +
scale_color_continuous(name="인구") +
scale_size_continuous(name="인구")
[scale color/size discrete 예시]
# data:다운
data <- read.csv("C:/Users/palt1/Desktop/R/university.csv")
head(data)
str(data)
# get_map : 지도가져오기
library(ggmap)
map <- get_map("seoul", zoom=18, maptype="watercolor")
ggmap(map)
# data의 위도, 경도 point 찍기
# 학교이름별 색깔변화
map2 <- ggmap(map) +
geom_point(data=data,
aes(x=lon, y=lat, color=factor(학교명)),
size=3)
map2
# label 넣기 / 범례제목설정
map2 + geom_text(data=data,
aes(x=lon+0.01, y=lat+0.01, label=학교명),
size=3) +
scale_color_discrete(name="학교명") # 범례제목설정
